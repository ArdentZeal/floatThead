<!DOCTYPE html>
<html lang='en'>
<head>
	<meta charset="UTF-8">
    <title>jQuery.floatThead</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js" type="text/javascript"></script>

    <script type='text/javascript' src="./../jquery.floatThead.js"></script>
    <script type='text/javascript' src="./lib/bootstrap.js"></script>
    <script type='text/javascript' src="./lib/underscore-min.js"></script>
    <link href="./lib/bootstrap.css" media="screen" rel="stylesheet" type="text/css"/>

    <link rel="stylesheet/less" type="text/css" href="./lib/styles.less">
    <script src="./lib/less.js" type="text/javascript"></script>

</head>


<body data-spy="scroll" data-target=".navbar">

<div class='container'>

<div class="navbar navbar-fixed-top" id='navbar'>
    <div class="navbar">
        <div class="navbar-inner">
            <a class="brand" href="/" style='margin-left: 0'>jQuery.floatThead</a>
            <ul class="nav">
                <li><a href="#intro">Intro</a></li>
                <li><a href="#usage">Usage</a></li>
                <li><a href="#options">Options</a></li>
                <li><a href="#examples">Examples</a></li>
                <li><a href="datatables.htm">Datatables Example</a></li>
            </ul>
        </div>
    </div>
</div>

<div class='row'>
<div class='span12' id='intro'>
<div class='intro-container'>
	<div class='row'>
		<div class='span6'>
			<h1>Intro</h1>
			I was fed up the current state of floating header plugins. They either lose your styles or lose your events, or dont support the edge cases.<br/>
			This is why i wrote <b>jQuery.floatThead</b>.
			<h4>Features:</h4>
			<ul>
				<li>Floats the table header - so that the user can always see it</li>
				<li>Supports tables with inner scroll bars, or whole page scrolling</li>
				<li>Horizonal or vertical scrolling</li>
				<li>Doesnt clone the thead - so your events stay bound</li>
				<li>Doesnt mess with your styles</li>
				<li>Works on any table</li>
				<li>Requires no special css</li>
				<li>Works with datatables</li> 
			</ul>
			<h4>Requirements:</h4>
			<ul>
				<li>jQuery 1.7.x or better</li>
				<li>Underscore.js 1.3 or better</li>
				<li>A modern browser: IE8+, FF or Chrome</li>
			</ul>

		</div>
		<div class='span5 offset1'>
			<div class='main-demo'>
				<div class='cta'>
					<h1>Demo</h1>
					<button class="btn btn-success run-main-demo" style='width: ' type="button">Run floatThead <i class='icon-play icon-white'></i></button><br/>
				</div>
				<div class='wrapper small'>
					<table class="table demo0 large template table-bordered table-striped">
						<thead> <tr> <th><a href="#" id='demoHeader1'>Header 1</a></th> <th><a href="#" id='demoHeader2'>Header 2</a></th> <th><a href="#" id='demoHeader3'>Header...3</a></th> </tr> </thead>
						<tbody> <tr> <td>Cell Content 1</td> <td>Cell Content 2</td> <td>Cell Content 3</td> </tr> <tr> <td>More Cell Content 1</td> <td>More Cell Content 2</td> <td>More Cell Content 3</td> </tr> <tr> <td>Even More Cell Content 1</td> <td>Even More Cell Content 2</td> <td>Even More Cell Content 3</td> </tr> <tr> <td>And Repeat 1</td> <td>And Repeat 2</td> <td>And Repeat 3</td> </tr> <tr> <td>Cell Content 1</td> <td>Cell Content 2</td> <td>Cell Content 3</td> </tr> <tr> <td>More Cell Content 1</td> <td>More Cell Content 2</td> <td>More Cell Content 3</td> </tr> <tr> <td>Even More Cell Content 1</td> <td>Even More Cell Content 2</td> <td>Even More Cell Content 3</td> </tr> <tr> <td>And Repeat 1</td> <td>And Repeat 2</td> <td>And Repeat 3</td> </tr> <tr> <td>Cell Content 1</td> <td>Cell Content 2</td> <td>Cell Content 3</td> </tr> <tr> <td>More Cell Content 1</td> <td>More Cell Content 2</td> <td>More Cell Content 3</td> </tr> <tr> <td>Even More Cell Content 1</td> <td>Even More Cell Content 2</td> <td>Even More Cell Content 3</td> </tr> <tr> <td>And Repeat 1</td> <td>And Repeat 2</td> <td>And Repeat 3</td> </tr> <tr> <td>Cell Content 1</td> <td>Cell Content 2</td> <td>Cell Content 3</td> </tr> <tr> <td>More Cell Content 1</td> <td>More Cell Content 2</td> <td>More Cell Content 3</td> </tr> <tr> <td>Even More Cell Content 1</td> <td>Even More Cell Content 2</td> <td>Even More Cell Content 3</td> </tr> <tr> <td>And Repeat 1</td> <td>And Repeat 2</td> <td>And Repeat 3</td> </tr> <tr> <td>Cell Content 1</td> <td>Cell Content 2</td> <td>Cell Content 3</td> </tr> <tr> <td>More Cell Content 1</td> <td>More Cell Content 2</td> <td>More Cell Content 3</td> </tr> <tr> <td>Even More Cell Content 1</td> <td>Even More Cell Content 2</td> <td>Even More Cell Content 3</td> </tr></tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

<br/>
</div>
</div>
<div class='row'>
	<div class='span12' id='usage'>
		<h1>Usage</h1>
		There are 2 ways you can initialize the table:<br/><br/>
		<ul>
			<li><b>Internal scrolling</b><br/><small>The table is inside of a container with overflow:auto</small></li>
			<li><b>Page scrolling</b><br/><small>Header becomes locked at the top of the page as user scrolls down</small></li>
		</ul>
		<b>Page scrolling</b> is the default. Initialize floatThead without any params to use it. <code>$('table').floatThead()</code>
		<br/><br/>
		<b>Internal scrolling</b> takes a bit more work. You must specify a container element inside of which the table will scroll. 
		You must create this element. Usually a div will wrap the table with overflow:auto and a size smaller than the table.<br/>
<pre>
var $table = $('table.demo'); 
$table.floatThead({
	scrollContainer: function($table){ 
		return $table.closest('.wrapper'); 
	}
});
</pre>
	</div>
</div>
<br/>
<div class='row'>
	<div class='span12' id='options'>
		<h1>Options</h1>
		<table class="table table-bordered table-striped">
            <thead>
             <tr>
               <th style="width: 100px;">Name</th>
               <th style="width: 100px;">type</th>
               <th style="width: 50px;">default</th>
               <th>description</th>
             </tr>
            </thead>
            <tbody>
             <tr>
               <td>scrollContainer</td>
               <td>function</td>
               <td>null</td>
               <td>Defines a contaier element inside of which the table scrolls vertically and/or horizontally. <small>usually a wrapping div</small></td>
             </tr><tr>
               <td>scrollingTop</td>
               <td>number</td>
               <td>0</td>
               <td>Offset from the top of the <b>window</b> where the floating header will 'stick' when scrolling down</td>
             </tr><tr>
               <td>scrollingBottom</td>
               <td>number</td>
               <td>0</td>
               <td>Offset from the bottom of the <b>table</b> where the floating header will stop when scrolling past the table</td>
             </tr><tr>
               <td>debouceResizeMs</td>
               <td>number</td>
               <td>50</td>
               <td>The headers are repositioned on resize. Because this event has the potential to fire a bunch of times, it is debounced. This is the <a href='http://unscriptable.com/2009/03/20/debouncing-javascript-methods/' target='_blank'>debounce rate</a>.</td>
             </tr><tr>
               <td>zIndex</td>
               <td>number</td>
               <td>1001</td>
               <td>z-index of the floating header</td>
             </tr><tr>
               <td>cellTag</td>
               <td>string</td>
               <td>th</td>
               <td>Specifies which tag is used in the header to specify cells</td>
             </tr>
            </tbody>
        </table>
	</div>
</div>
<br/>
<div class='row'>
	<div class='span12' id='examples'>
		<h1>Examples</h1>
		<div class='row'>
			<div class='span6'>
				<h2>Internal Scrolling</h2>
				<div class='desc'>
					Internal scrolling is used when the table is inside of a container smaller than itself.<br/>
					<b>Code</b>
<pre>
$('table.demo1').floatThead({
	scrollingTop: 41,
	scrollContainer: function($table){
		return $table.closest('.wrapper');
	}
});
</pre>
				</div>
				<div class='wrapper' style='height: 400px'>
					<div class='gimme-table' data-cls='demo1'></div>
				</div>
			</div>
			<div class='span6'>
				<h2>Page Scrolling</h2>
				<div class='desc'>
					Page scrolling isused when you have a large table that takes up the whole screen.<br/>
					<b>Code</b>
<pre>
$('table.demo2').floatThead({
	scrollingTop: 41 
	//I need this offset because i dont want the header to overlap my nav
});
</pre>
				</div>
				<div class='gimme-table' data-cls='demo2'></div>
			</div>
		</div>
	</div>
</div>
<div style='height:700px'></div>
<div class='row'>
	<div class='span12' id='examples'>
		<h1>TODO</h1>
		<div class='row'>
			This plugin should be considered early alpha.<br/>
			<ul>
				<li>fix first resize bug</li>
				<li>fix spellign!</li>
				<li>example with reflow event triggering</li>
				<li>stablize code</li>
				<li>cleanup code</li>
				<li>do not calc anything if table is out of viewport</li>
			</ul>
				
		</div>
	</div>
</div>

</div>

<script type="text/javascript">
    $(document).ready(function () {
    	var $tableTemplate = $('table.template');
    	$('.gimme-table').each(function(){
    		var $placeholder = $(this);
    		var cls = $placeholder.data('cls');
    		var $clone = $tableTemplate.clone();
    		$clone.attr('class', '').addClass('table').addClass(cls);
    		$placeholder.replaceWith($clone);
    	});

    	$('table.demo1').floatThead({
    		scrollingTop: 41,
    		scrollContainer: function($table){
				return $table.closest('.wrapper');
			}
    	});
    	$('table.demo2').floatThead({
    		scrollingTop: 41
    	});

		var $demoTable = $("table.demo0");
		$demoTable.find('#demoHeader1').on('click', function(){
			alert('Click event fired');
			return false;
		}).text('click me');
		$demoTable.find('#demoHeader2').on('mouseover', function(){
			$(this).closest('th').css('background-color', '#ccc');
		}).on('mouseout', function(){
			$(this).closest('th').css('background-color', '#eee');
		}).text('mouse over me');
		
		$(".run-main-demo").click(function(){
			var $button = $(this);
			
			
			if($button.is('.btn-danger')){
				$demoTable.floatThead('destroy');
				$button.html("Run floatThead  <i class='icon-play icon-white'></i>").removeClass('btn-danger').addClass('btn-success');
			} else {
				$demoTable.floatThead({
					scrollingTop: 41,
					scrollContainer: function($table){
						return $table.closest('.wrapper');
					}
				});
				$button.tooltip("show");
				setTimeout(function(){
					$button.tooltip("hide");
				}, 5000);
				$button.html("Remove floatThead  <i class='icon-trash icon-white'></i>").addClass('btn-danger').removeClass('btn-success');
			}
		}).tooltip({
			trigger: "manual",
			title: "Now try scrolling around in the table",
			placement: "top"
		});
    });
</script>

</body>
</html>